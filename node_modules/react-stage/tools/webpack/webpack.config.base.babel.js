import path from 'path';
import webpack from 'webpack';
import merge from 'webpack-merge';

const env = process.env.NODE_ENV || 'production';

let baseConfig = {
  stats: {
    children: false,
    modules: false,
    warnings: false
  },
  resolve: {
    alias: {
      'react-stage': path.resolve(__dirname, '../../src/index.js')
    },
  },
  module: {
    rules: [
      { test: /\.js$/, use: 'babel-loader', exclude: /(node_modules)/ },
      { test: /\.json$/, use: 'json-loader' }
    ],
  },
};

if (process.env.NODE_ENV === 'production') {
  baseConfig = merge(baseConfig, {
    plugins: [
      new webpack.DefinePlugin({
        'process.env.NODE_ENV': JSON.stringify(env)
      }),
      new webpack.optimize.UglifyJsPlugin({
        compress: {
          unused: true,
          dead_code: true,
          warnings: false,
          drop_debugger: true,
          conditionals: true,
          evaluate: true,
          drop_console: true,
          sequences: true,
          booleans: true,
        }
      }),
      new webpack.optimize.OccurrenceOrderPlugin()
    ]
  });
}

export default baseConfig;
